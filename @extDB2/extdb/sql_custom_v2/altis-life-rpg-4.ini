[Default]
Version = 8
Number of Inputs = 0
Sanitize Input Value Check = false
Sanitize Output Value Check = false
Prepared Statement Cache = true
Return InsertID = false
Strip = true
Strip Chars Action = STRIP
Strip Chars = \/\|;{}<>\'
Strip Custom Chars = \/\|;{}<>\'

;;**************************************************************
;;**************************************************************
;; PROCEDURE CALLS
;;

;;______________________________________________________________
[resetLifeVehicles]
;;

SQL1_1 = CALL resetLifeVehicles;

Number of Inputs = 0
Prepared Statement Cache = false


;;______________________________________________________________
[deleteDeadVehicles]
;;

SQL1_1 = CALL deleteDeadVehicles;

Number of Inputs = 0
Prepared Statement Cache = false


;;______________________________________________________________
[deleteOldHouses]
;;

SQL1_1 = CALL deleteOldHouses;

Number of Inputs = 0
Prepared Statement Cache = false


;;______________________________________________________________
[deleteOldGangs]
;;

SQL1_1 = CALL deleteOldGangs;

Number of Inputs = 0
Prepared Statement Cache = false



;;**************************************************************
;;**************************************************************
;; GANGS
;;


;;______________________________________________________________
[gangIDPlayer]
;;

SQL1_1 = SELECT id FROM gangs WHERE members LIKE ? AND active='1';

Number of Inputs = 1
SQL1_INPUTS = 1


;;______________________________________________________________
[gangNameSelectID]
;;

SQL1_1 = SELECT id FROM gangs WHERE name=? AND active=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[gangOwnerSelectID]
;;

SQL1_1 = SELECT id FROM gangs WHERE owner=? AND active=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2

;;______________________________________________________________
[gangInsert]
;;

SQL1_1 = INSERT INTO gangs (owner, name, members) VALUES(?,?,?);
SQL1_INPUTS = 1, 2, 3

Number of Inputs = 3


;;______________________________________________________________
[gangUpdate]
;;

SQL1_1 = UPDATE gangs SET active=1, owner=?,members=? WHERE id=?;

Number of Inputs = 3
SQL1_INPUTS = 1, 2, 3


;;______________________________________________________________
[gangRemove]
;;

SQL1_1 = UPDATE gangs SET active='0' WHERE id=?;
SQL1_INPUTS = 1
SQL2_1 = UPDATE houses SET owned='0' WHERE pid=? ;
SQL2_INPUTS = 1
Number of Inputs = 1


;;______________________________________________________________
[gangInfo]
;; Get Gang Info
;;

SQL1_1 = SELECT id, owner, name, maxmembers, bank, members FROM gangs WHERE active='1' AND members LIKE ?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4, 5, 6


;;______________________________________________________________
[gangBankInfoUpdate]
;; Update Gang Bank
;;

SQL1_1 = UPDATE gangs SET bank=? WHERE id=?;
SQL1_INPUTS = 1, 2

Number of Inputs = 2


;;______________________________________________________________
[gangInfoUpdate]
;; Update Gang Info
;;

SQL1_1 = UPDATE gangs SET bank=?, maxmembers=?, owner=? WHERE id=?;
SQL1_INPUTS = 1, 2, 3-String, 4

Number of Inputs = 4


;;______________________________________________________________
[gangMaxMembersUpdate]
;; Update Gang Max Members
;;

SQL1_1 = UPDATE gangs SET maxmembers=? WHERE id=?;
SQL1_INPUTS = 1, 2

Number of Inputs = 2


;;______________________________________________________________
[gangMembersUpdate]
;; Update Gang Members
;;

SQL1_1 = UPDATE gangs SET members=? WHERE id=?;
SQL1_INPUTS = 1, 2

Number of Inputs = 2


;;______________________________________________________________
[gangOwnerUpdate]
;; Update Gang Owner
;;

SQL1_1 = UPDATE gangs SET owner=? WHERE id=?;
SQL1_INPUTS = 1,2

Number of Inputs = 2


;;**************************************************************
;;**************************************************************
;; PLAYERS
;;

;;______________________________________________________________
[playerInfo]
;;

SQL1_1 = SELECT playerid, name FROM players WHERE playerid=?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1, 2

;;______________________________________________________________
[playerInfoInsert]
;;

SQL1_1 = INSERT INTO players
;;				1          2 	 3     4        5        6             7             8             9         10        11      12
SQL1_2 = 		(playerid, name, cash, bankacc, aliases, cop_licenses, med_licenses, civ_licenses, civ_gear, cop_gear, med_gear, position)
SQL1_3 = 		VALUES(?,?,?,?,?,?,?,?,?,?,?,?)

SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12

Number of Inputs = 12

;;______________________________________________________________
[playerWestInfo]
;;
					1		2	  3		 4			5			6			7			8		  9			10         11
SQL1_1 = SELECT playerid, name, cash, bankacc, adminlevel, donatorlvl, cop_licenses, coplevel, cop_gear, blacklist, swatlevel FROM players WHERE playerid=?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3, 4, 5-String, 6-String, 7, 8-String, 9, 10, 11-String

;;______________________________________________________________
[playerCivInfo]
;;
;;              1         2     3     4        5           6           7             8            9	      10
SQL1_1 = SELECT playerid, name, cash, bankacc, adminlevel, donatorlvl, civ_licenses, arrested, civ_gear, rprank FROM players WHERE playerid=?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3, 4, 5-String, 6-String, 7, 8-String, 9, 10

;;______________________________________________________________
[playerIndependentInfo]
;;
					1		2	  3		 4			5			6			7			  8			9
SQL1_1 = SELECT playerid, name, cash, bankacc, adminlevel, donatorlvl, med_licenses, mediclevel, med_gear FROM players WHERE playerid=?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3, 4, 5-String, 6-String, 7, 8-String, 9

;;______________________________________________________________
[playerWestUpdate]
;;

SQL1_1 = UPDATE players
;;				1          2 	    3          4                       5
SQL1_2 = 		SET name=?, cash=?, bankacc=?, cop_licenses=? WHERE playerid=?

SQL1_INPUTS = 1, 2, 3, 4, 5

Number of Inputs = 5


;;______________________________________________________________
[playerCivilianUpdate]
;;

SQL1_1 = UPDATE players
;;				1          2 	    3          4               5           6                7
SQL1_2 = 		SET name=?, cash=?, bankacc=?, civ_licenses=?, civ_gear=?, arrested=?, position=?, alive=? WHERE playerid=?;

SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7-String, 8, 9

Number of Inputs = 9


;;______________________________________________________________
[playerIndependentUpdate]
;;

SQL1_1 = UPDATE players
;;				1          2 	    3          4               5                 6
SQL1_2 = 		SET name=?, cash=?, bankacc=?, med_licenses=?, med_gear=? WHERE playerid=?;

SQL1_INPUTS = 1, 2, 3, 4, 5, 6

Number of Inputs = 6


;;______________________________________________________________
[playerUpdateCash]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET cash=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateBank]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET bankacc=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateBank+Cash]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET cash=?, bankacc=? WHERE playerid=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3


;;______________________________________________________________
[playerUpdateCopLicense]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET cop_licenses=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateCivLicense]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET civ_licenses=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateMedLicense]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET med_licenses=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateCopGear]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET cop_gear=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateCivGear]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET civ_gear=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateMedGear]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET med_gear=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateAlive]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET alive=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateArrested]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET arrested=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;**************************************************************
;;**************************************************************
;; VEHICLES
;;

;;______________________________________________________________
[vehicleDead]
;;

SQL1_1 = UPDATE vehicles SET alive=? WHERE pid=? AND plate=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

;;______________________________________________________________
[vehicleInsert]
;;

SQL1_1 = INSERT INTO vehicles
;;						1      2          3     4    5      6       7          8      9
SQL1_2 = 				(side, classname, type, pid, alive, active, inventory, color, plate)
SQL1_3 = 				VALUES (?,?,?,?,?,?,?,?,?);

SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9
Number of Inputs = 9


;;______________________________________________________________
[vehicleInfo]
;;

;;				1   2     3          4     5    6      7       8      9       10    11        12      13       14
SQL1_1 = SELECT id, side, classname, type, pid, alive, active, plate, color, gps, security, trunk, insurance, hooks
SQL1_2 = 	FROM vehicles WHERE id=? AND pid=?;
SQL1_INPUTS = 1, 2
Number of Inputs = 2

OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6, 7, 8, 9, 10, 11, 12, 13, 14


;;______________________________________________________________
[vehiclesInfo]
;;

;;				1   2     3          4     5    6      7       8      9       10     11       12       13       14
SQL1_1 = SELECT id, side, classname, type, pid, alive, active, plate, color, gps, security, trunk, insurance, hooks
SQL1_2 = 	FROM vehicles WHERE pid=? AND alive=1 AND active = 0 AND side=? AND type=?;
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6, 7, 8, 9, 10, 11, 12, 13, 14


;;______________________________________________________________
[vehicleUpdateActive]
;;

SQL1_1 = UPDATE vehicles SET active=? WHERE pid=? AND id=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3


;;______________________________________________________________
[vehicleUpdateActivePlate]
;;

SQL1_1 = UPDATE vehicles SET active=? WHERE pid=? AND plate=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3



;;______________________________________________________________
[vehicleUpdateAlive]
;;

SQL1_1 = UPDATE vehicles SET alive=? WHERE pid=? AND id=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3


;;______________________________________________________________
[vehicleUpdateAlivePlate]
;;

SQL1_1 = UPDATE vehicles SET alive=? WHERE pid=? AND plate=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3


;;***************************************************************
;;***************************************************************
;;
;; Vehicle Upgrades
;;______________________________________________________________
[updateCarUpgrades]
;;
;;							  1		   2          3        4            5          6          7           8
SQL1_1 = UPDATE vehicles SET active=?, gps=?, security=?, trunk=?, insurance=?, hooks=? WHERE pid=? AND plate=?;

SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8
Number of Inputs = 8

;;______________________________________________________________
[removeInsurance]
;;

SQL1_1 = UPDATE vehicles SET insurance=0, active=0 WHERE pid=? AND plate=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2

;;**************************************************************
;;**************************************************************
;; Housing System
;;


;;______________________________________________________________
[housingCount]
;;

SQL1_1 = SELECT COUNT(*) FROM houses WHERE owned='1';

Number of Inputs = 0

;;______________________________________________________________
[housingInit]
;;

SQL1_1 = SELECT id, pos FROM houses WHERE owned='1' LIMIT ?,10;

SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1-String, 2-String

;;______________________________________________________________
[housingInitCiv]
;;

SQL1_1 = SELECT houses.pid, players.name FROM houses INNER JOIN players ON houses.pid=players.playerid WHERE houses.pos=?;

SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1-String, 2-String, 3-String

;;______________________________________________________________
[housingInitGang]
;;

SQL1_1 = SELECT gangs.id, gangs.name, inventory, containers FROM houses INNER JOIN gangs ON houses.pid=gangs.id WHERE houses.pos=?;

SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1-String, 2-String, 3, 4

;;______________________________________________________________
[housingFetchPlayerHouse]
;;
SQL1_1 = SELECT pid, pos, inventory, containers FROM houses WHERE pid=? OR pid=? AND owned='1';

SQL1_INPUTS = 1, 2
Number of Inputs = 2

OUTPUT = 1-String, 2-String, 3, 4

;;______________________________________________________________
[housingFetchGangHouse]
;;
SQL1_1 = SELECT pid, pos, inventory, containers FROM houses WHERE id=? AND owned='1';

SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1-String, 2-String, 3, 4

;;______________________________________________________________
[housingCheckHouse]
;;
SQL_1 = SELECT id FROM houses WHERE pos=? AND owned='1';

SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1-String

;;______________________________________________________________
[housingAddHouse]
;;
SQL1_1 = INSERT INTO houses (pid, pos, inventory, containers, owned)
SQL1_2 = 	VALUES(?,?,?,?,?);
SQL1_INPUTS = 1, 2, 3, 4, 5
SQL2_1 = SELECT id FROM houses WHERE pos=? AND pid=? AND owned='1';
SQL2_INPUTS = 2, 1

Number of Inputs = 5
OUTPUT = 1

;;______________________________________________________________
[housingSellHouse]
;;
SQL1_1 = UPDATE houses SET owned='0', pos='[]' WHERE pos=? AND owned='1';
SQL1_INPUTS = 1

Number of Inputs = 1

;;______________________________________________________________
[housingSellHouse2]
;;
SQL1_1 = UPDATE houses SET owned='0', pos='[]' WHERE id=?;
SQL1_INPUTS = 1

Number of Inputs = 1

;;______________________________________________________________
[houseUpdateContainer]
;;
SQL1_1 = UPDATE houses SET containers=? WHERE id=?;
SQL1_INPUTS = 1, 2

Number of Inputs = 2

;;______________________________________________________________
[houseUpdateContainer2]
;;
SQL1_1 = UPDATE houses SET containers=? WHERE pos=?;
SQL1_INPUTS = 1, 2

Number of Inputs = 2

;;______________________________________________________________
[housingUpdateInventory]
;;
SQL1_1 = UPDATE houses SET inventory=? WHERE id=?;
SQL1_INPUTS = 1, 2

Number of Inputs = 2

;;______________________________________________________________
[housingUpdateInventory2]
;;
SQL1_1 = UPDATE houses SET inventory=? WHERE pos=?;
SQL1_INPUTS = 1, 2

Number of Inputs = 2

;;______________________________________________________________
[housingCleanup]
;;
SQL1_1 = SELECT pid, pos, inventory, containers FROM houses WHERE pid=? AND owned='1';
SQL1_INPUTS = 1

Number of Inputs = 1

OUTPUT = 1-String, 2-String, 3, 4

;;**************************************************************
;;**************************************************************
;; Wanted System
;;


;;______________________________________________________________
[wantedGetCrimes]
;;

SQL1_1 = SELECT wantedID, wantedCrimes FROM wanted WHERE wantedID=?;

SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1-String, 2

;;______________________________________________________________
[wantedUpdateCrimes]
;;

SQL1_1 = UPDATE wanted SET wantedCrimes = ?, wantedBounty = wantedBounty + ?, active = '1' WHERE wantedID=?;
SQL1_INPUTS = 1, 2, 3

Number of Inputs = 3

;;______________________________________________________________
[wantedInsertCrimes]
;;

SQL1_1 = INSERT INTO wanted (wantedID, wantedName, wantedCrimes, wantedBounty, active)
SQL1_2 = 	VALUES(?,?,?,?,?);

SQL1_INPUTS = 1, 2, 3, 4, 5

Number of Inputs = 5

;;______________________________________________________________
[wantedFetchBounty]
;;

SQL1_1 = SELECT wantedID, wantedName, wantedCrimes, wantedBounty FROM wanted WHERE active='1' AND wantedID=?;
SQL1_INPUTS = 1

Number of Inputs = 1

OUTPUT = 1-String, 2-String, 3, 4

;;______________________________________________________________
[wantedFetchCrimes]
;;

SQL1_1 = SELECT wantedCrimes, wantedBounty FROM wanted WHERE active='1' AND wantedID=?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1, 2

;;______________________________________________________________
[wantedFetchID]
;;

SQL1_1 = SELECT wantedID, wantedName FROM wanted WHERE active='1' AND wantedID in (?);
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String, 2-String

;;______________________________________________________________
[wantedFetchPerson]
;;

SQL1_1 = SELECT wantedID, wantedName, wantedBounty FROM wanted WHERE wantedID=? AND active='1';
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3

;;______________________________________________________________
[wantedFetchName]
;;

SQL1_1 = SELECT wantedName FROM wanted WHERE wantedID=?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String

;;______________________________________________________________
[wantedUpdateName]
;;

SQL1_1 = UPDATE wanted SET wantedName=? WHERE wantedID=?;
SQL1_INPUTS = 1, 2

Number of Inputs = 2

;;______________________________________________________________
[wantedRemoveCrimes]
;;

SQL1_1 = UPDATE wanted SET active = 0, wantedCrimes = '[]', wantedBounty = 0 WHERE wantedID=?;
SQL1_INPUTS = 1

Number of Inputs = 1

;;______________________________________________________________
[wantedFetchForCivilian]
;;

SQL1_1 = SELECT wantedBounty FROM wanted WHERE wantedID=? AND active='1';
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1


;;_______________________________________________________________
[wantedSyncTable]

SQL1_1 = SELECT wantedID, wantedName, wantedCrimes, wantedBounty FROM wanted WHERE wantedID=? AND active='1';
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3, 4

;;***************************************************************
;;***************************************************************
;;
;; Player positions
;;______________________________________________________________
[playerPosition]
;;

;;
SQL1_1 = SELECT alive, position
SQL1_2 = 	FROM players WHERE playerid=? ;
SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1, 2-String


;;______________________________________________________________
[playerPositionUpdate]
;;

;;
SQL1_1 = UPDATE players SET position=?, alive=? WHERE playerid =?;
SQL1_INPUTS = 1-String, 2, 3

Number of Inputs = 3

;;***************************************************************
;;***************************************************************
;;
;; Economy
;;______________________________________________________________
[loadPrices]
;;
;;			       1         2           3        4          5          6       7        8
SQL1_1 = SELECT resource, buyprice, sellprice, varprice, minprice, maxprice, factor, shoptype FROM economy ;

OUTPUT = 1-String, 2, 3, 4, 5, 6, 7, 8-String

;;______________________________________________________________
[syncPrices]
;;

;;
SQL1_1 = UPDATE economy SET sellprice=? WHERE resource =?;
SQL1_INPUTS = 1, 2

Number of Inputs = 2

;;***************************************************************
;;***************************************************************
;;
;; Smartphone
;;______________________________________________________________
[msgRequest]
;;
;;			       1     2       3        4        5            6       7      8
SQL1_1 = SELECT fromID, toID, message, fromName, toName FROM messages WHERE toID=? ORDER BY time DESC ;

SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1-String, 2-String, 3, 4-String, 5-String

;;______________________________________________________________
[cleanupMessages]
;;

;;
SQL1_1 = DELETE FROM messages WHERE toID=? ;
SQL1_INPUTS = 1

Number of Inputs = 1

;;______________________________________________________________
[handleMessages]
;;

;;
SQL1_1 = INSERT INTO messages (fromID, toID, message, fromName, toName)
SQL1_2 = VALUES(?, ?, ?, ?, ?) ;
SQL1_INPUTS = 1, 2, 3, 4, 5

Number of Inputs = 5

;;***************************************************************
;;***************************************************************
;;
;; Jail
;;______________________________________________________________
[jailPlayer]
;;
;;
SQL1_1 = UPDATE players SET arrested=?, jail_time=? WHERE playerid=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

;;______________________________________________________________
[getJailTime]
;;

;;
SQL1_1 = SELECT jail_time
SQL1_2 = 	FROM players WHERE playerid=? ;
SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1

;;______________________________________________________________
[setJailTime]
;;

;;
SQL1_1 = UPDATE players
SQL1_2 = 	SET jail_time=? WHERE playerid=? ;
SQL1_INPUTS = 1, 2
Number of Inputs = 2

;;______________________________________________________________
[updateJailTime]
;;

;;
SQL1_1 = UPDATE players
SQL1_2 = 	SET jail_time=(jail_time - 1) WHERE playerid=? ;
SQL1_INPUTS = 1
Number of Inputs = 1

;;______________________________________________________________
[freedPlayers]
;;

;;
SQL1_1 = SELECT IF( remainingtime <= 0, TRUE, FALSE ) FROM players WHERE playerid=? ;
SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1-String
